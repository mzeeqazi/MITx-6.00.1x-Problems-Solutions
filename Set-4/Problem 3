Valid Words
____________

At this point, we have written code to generate a random hand and display that hand to the user. We can also ask the user for a word (Python's input) and score the word (using your getWordScore). However, at this point we have not written any code to verify that a word given by a player obeys the rules of the game. A valid word is in the word list; and it is composed entirely of letters from the current hand. Implement the isValidWord function.

Testing: Make sure the test_isValidWord tests pass. In addition, you will want to test your implementation by calling it multiple times on the same hand - what should the correct behavior be? Additionally, the empty string ('') is not a valid word - if you code this function correctly, you shouldn't need an additional check for this condition.
_____________________

def isValidWord(word, hand, wordList):
    """
    Returns True if word is in the wordList and is entirely
    composed of letters in the hand. Otherwise, returns False.

    Does not mutate hand or wordList.
   
    word: string
    hand: dictionary (string -> int)
    wordList: list of lowercase strings
    """
    
    # change hand dict keys to list
    handLettersList = ''.join(hand.keys())
    
    handCopy = hand.copy()

    # if word is not in list return false else
    # for each letter in word check if its in hand
    # and occurs at least one time
    # if not return false
    # else decrese in copy of hand letter occurence    
    
    if word in wordList:
        for el in word:
            if el in handLettersList and handCopy[el] > 0:
                handCopy[el] -= 1
            else:
                return False
        return True
    else:
        return False
